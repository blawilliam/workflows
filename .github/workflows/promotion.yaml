name: Build and Deploy Docker Image

on:
  workflow_call:
    inputs:
      SERVICE:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      TARGET_REPO_TOKEN:
        required: true
      SLACK_WEBHOOK_URL:
        required: true
      DB_USER:
        required: false
      DB_HOST:
        required: false
      DB_PASSWORD:
        required: false
      DB_DATABASE:
        required: false
      NEXT_PUBLIC_BUILDER_API_KEY:
        required: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Extract and Set Environment Variables
        run: |
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_DATABASE=$DB_DATABASE" >> .env
          echo "NEXT_PUBLIC_BUILDER_API_KEY=$NEXT_PUBLIC_BUILDER_API_KEY" >> .env
          export $(cat .env | xargs)
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          NEXT_PUBLIC_BUILDER_API_KEY: ${{ secrets.NEXT_PUBLIC_BUILDER_API_KEY }}

      - name: Extract short SHA
        id: extract_short_sha
        run: echo "::set-output name=SHORT_SHA::${GITHUB_SHA::7}"

      - name: Build Docker Image
        env:
          SHORT_SHA: ${{ steps.extract_short_sha.outputs.SHORT_SHA }}
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${SHORT_SHA} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${SHORT_SHA} ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        env:
          SHORT_SHA: ${{ steps.extract_short_sha.outputs.SHORT_SHA }}
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.SERVICE }}:${SHORT_SHA}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ inputs.SERVICE }}:latest

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Status: :rocket:"
          SLACK_TITLE: Docker Build
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

  commit-to-repo:
    needs: build-and-deploy # This job depends on the completion of the previous job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Extract short SHA
        id: extract_short_sha
        run: echo "::set-output name=SHORT_SHA::${GITHUB_SHA::7}"

      - name: Set Up Git Config
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@users.noreply.github.com'

      - name: Clone Target Repository
        run: |
          git clone https://$TARGET_REPO_TOKEN@github.com/blawilliam/argocd-kustomize.git target-repo
        env:
          TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}

      - name: Make Changes
        run: |
          cd target-repo
          sed -i 's|docker.io/${{ secrets.DOCKER_USERNAME }}/${{ inputs.SERVICE }}:.*|docker.io/${{ secrets.DOCKER_USERNAME }}/${{ inputs.SERVICE }}:${{ steps.extract_short_sha.outputs.SHORT_SHA }}|' ${{ inputs.SERVICE }}/deployment.yaml

      - name: Make Changes
        run: |
          cd target-repo
          # Make necessary changes to the repository files

      - name: Commit and Push
        run: |
          cd target-repo
          git add .
          git commit -m "Automated commit from GitHub Actions"
          git push origin main
        env:
          TARGET_REPO_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: "Status: :rocket:"
          SLACK_TITLE: Image Sha Update
          SLACK_USERNAME: rtCamp
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
